<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>弦而時習之</title><link>https://blog.aotoki.me/</link><description>Recent content on 弦而時習之</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><managingEditor>contact@aotoki.me (蒼時弦也)</managingEditor><webMaster>contact@aotoki.me (蒼時弦也)</webMaster><lastBuildDate>Sun, 15 Dec 2024 17:26:06 +0800</lastBuildDate><atom:link href="https://blog.aotoki.me/index.xml" rel="self" type="application/rss+xml"/><item><title>可能性 - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/12/06/rethink-rails-architecture-possibility/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 06 Dec 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/12/06/rethink-rails-architecture-possibility/</guid><description>&lt;p>近年在台灣使用 Ruby on Rails 的專案逐漸減少，然而在其他國家仍有許多專案使用。這一系列的文章試著從不同的角度看待 Rails 開發的可能性，就是希望能挖掘出更多應用情境。&lt;/p></description><content:encoded>&lt;p>近年在台灣使用 Ruby on Rails 的專案逐漸減少，然而在其他國家仍有許多專案使用。這一系列的文章試著從不同的角度看待 Rails 開發的可能性，就是希望能挖掘出更多應用情境。&lt;/p>
&lt;h2 id="scalability">規模化&lt;/h2>
&lt;p>Rails 是一個能很好規模化（Scalability）的一個框架，這裡指的不是開發大規模系統，而是讓大多數的工程師都能夠參與到開發中。&lt;/p>
&lt;p>大多數專業能力發展到一個階段，就會需要將這些技能傳遞給其他人來做更多、更複雜的任務，那麼勢必會需要簡化和抽象化許多細節。而 Rails 容易入門與優秀的開發速度，就很好體現了這一點，也是到現在仍有許公司選擇 Rails 的原因。&lt;/p>
&lt;p>然而，這也成為 Rails 框架的一大弱點，一但我們習慣這樣簡化的系統後就很可能停滯在某個階段沒有明顯的進步，而造成環境中只有熟悉基本使用的新手與突破各種難關的專家，反而很少有中階的工程師存在。&lt;/p>
&lt;h2 id="deep-into-rails">拆解細節&lt;/h2>
&lt;p>要改善這樣的問題，我們可以從拆解一個框架的細節來著手。這並非要我們針對每一行程式碼閱讀，而是去探討一個框架提供了哪些能力，將怎樣的問題封裝起來。&lt;/p>
&lt;p>舉例來說，在 Ruby 中基本上是以 Rack 定義的介面作為 HTTP 伺服器的標準，在處理一個 HTTP 請求的過程中，並不會幫我們處理傳入的參數、判斷內容格式（&lt;code>Content-Type&lt;/code>）和正確解析，然而使用 Rails 時則自然而然的都變成 &lt;code>ActionController::Parameters&lt;/code> 物件，讓我們可以以 Hash-like 的介面進行操作。&lt;/p>
&lt;p>簡單來說，Rails 幫助我們將開發 Web 應用所需的 HTTP 協定、資料庫、內容算繪（Render）等情境都做了一定抽象化，我們只需要依照慣例（Convention）或者說約定好的介面（Interface）就可以很簡單地進行實踐。&lt;/p>
&lt;h2 id="advanced">更進一步&lt;/h2>
&lt;p>當我們了解到了這些議題後就自然會發現，開發框架基本上是幫我們處理了「基礎建設」的部分，要更進一步將整個商業邏輯放到裡面，是不足的。&lt;/p>
&lt;p>這也衍伸出了這系列的議題，當我們的開發活動是圍繞在框架本身而沒有更加深入的區隔出職責（Responsibility）的時候，是否仍然只處理了非常表面的問題。也因此，從 Clean Architecture 的角度來看，在入門 Rails 所學會的技巧並未觸及到 Use Case 和 Entities 兩個層面，或者說沒有「釐清」因此才會產生 Service Object 這類技巧來幫助我們進一步抽象化。&lt;/p>
&lt;p>可惜的是，這些工具、套件大多是非常零碎的，也很常讓我們無法區分該以哪個方式來搭配使用。這一次以實驗性的角度看待 Rails 針對這類狀況實作能有哪些手段，多少有解決了一些套件的意圖，但是仍有許多可以改善的地方等待討論與深入。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Query - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/11/29/rethink-rails-architecture-query/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 29 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/29/rethink-rails-architecture-query/</guid><description>&lt;p>前面我們主要著重在寫入的處理，如果是單純寫入的處理，我們可以使用 Query 來處理。基本上 Command 和 Query 都可以看作 Use Case（使用案例）的一種，可以根據複雜程度決定是否需要細分，當我們實踐到這個階段，也接近有讀寫分離的系統所呈現的狀態。&lt;/p></description><content:encoded>&lt;p>前面我們主要著重在寫入的處理，如果是單純寫入的處理，我們可以使用 Query 來處理。基本上 Command 和 Query 都可以看作 Use Case（使用案例）的一種，可以根據複雜程度決定是否需要細分，當我們實踐到這個階段，也接近有讀寫分離的系統所呈現的狀態。&lt;/p>
&lt;h2 id="query">Query&lt;/h2>
&lt;p>Query 的實作跟 Command 基本上是相同的，只是我們更明確的將職責「讀取」和「寫入」區分開來，因此只需要在 &lt;code>lib/shipments/query&lt;/code> 目錄下增加一個 &lt;code>find_shipment.rb&lt;/code> 即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Query&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">FindShipment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:shipment_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_repository&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="vi">@shipment_repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment_repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_shipment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我們在「取得 Shipment」的機制上跟 Command 是同樣的邏輯，這表示我們能用相同的 Repository 來處理，因此就不需要重新處理 Repository 的實作，直接沿用現有的行為。&lt;/p>
&lt;blockquote>
&lt;p>Query 也很適合用於處理先前提到的報表情境，因為我們已經將行為限定在報表相關的處理，因此可以集中精神在報表的查詢上，這種情境時，能在 Repository 直接撰寫 SQL 會比 ORM 更加高效，這也是為什麼 Repository 不直接等同於 Rails 的 ActiveRecord。&lt;/p>
&lt;/blockquote>
&lt;h2 id="testing">測試&lt;/h2>
&lt;p>撰寫測試是一個好習慣，能確保我們在新增或者修改時不會影響現有的行為，也能更直觀反應每個功能的邏輯。在原本的 &lt;code>features/shipment.feature&lt;/code> 可以加入新的描述來反應這次新增的功能。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gherkin" data-lang="gherkin">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">Feature:&lt;/span>&lt;span class="nf"> Shipment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nf"> # ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Scenario:&lt;/span>&lt;span class="nf"> I can get the shipment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> Given &lt;/span>&lt;span class="nf">there have some shipment route
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> route_id&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> shipment_id&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> delivered_at&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> OKA&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> 1&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> 2024-03-19T00:00:00Z&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">When &lt;/span>&lt;span class="nf">I make a GET request to &amp;#34;&lt;/span>&lt;span class="s">/shipments/1&lt;/span>&lt;span class="nf">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Then &lt;/span>&lt;span class="nf">the response should be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;id&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;state&amp;#34;: &amp;#34;shipping&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;routes&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;route_id&amp;#34;: &amp;#34;OKA&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;shipment_id&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;delivered_at&amp;#34;: &amp;#34;2024-03-19T00:00:00.000Z&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="s"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="s"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因為有新的步驟，還會需要在 Step Definition 中，針對 &lt;code>GET&lt;/code> 的情境增加新的定義。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="no">When&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;I make a GET request to {string}&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="vi">@response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="n">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="complete-feature">完善功能&lt;/h2>
&lt;p>最後，我們就可以把前面沒有提到的部分加入到 Rails 中。先針對 &lt;code>config/routes.rb&lt;/code> 調整將預設值設定為 JSON 格式。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:shipments&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">module&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:shipments&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">defaults&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:json&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">only&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:create&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">defaults&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:json&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接著加入 &lt;code>app/shipments/shipments_controller.rb&lt;/code> 呼叫這次增加的 Query 物件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">ShipmentsController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">show&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="n">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Shipments&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Query&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">FindShipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_repository&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ShipmentRoute&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="vi">@shipment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:id&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跟增加 View 的方式相同，這次加入 &lt;code>app/shipments/shipments/show.json.jbuilder&lt;/code> 來顯示內容。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">route_id&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipment_id&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本上跟 Command 是差不多的，在這裡我們不一定要追求「消除重複」的處理，因為查詢單個 Shipment 和增加 Route 後的回傳，有可能在未來改變，可以依照當下的狀況處理。&lt;/p>
&lt;p>即使遇到要重複使用，也可以考慮採用 Partial 的機制來維護，可以更好的根據使用情境調整。&lt;/p>
&lt;p>這一系列的實作，可以看到我們基本上是圍繞在名為 &lt;code>Shipments&lt;/code> 的模組進行，大部分的實作都被整合在這個模組之下，讓我們可以更加專注在單一功能上，又不會跟框架、其他模組有耦合的關係，以長期的角度來看整個專案是更加容易維護的。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>從 Clean Architecture 反思抽象化</title><link>https://blog.aotoki.me/posts/2024/11/27/rethink-abstraction-with-clean-architecture/</link><category>Clean Architecture</category><category>經驗</category><category>心得</category><pubDate>Wed, 27 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/27/rethink-abstraction-with-clean-architecture/</guid><description>&lt;p>最近在帶同事做 &lt;a href="https://www.scrum.org/resources/blog/temperature-reading-retrospective">Temperature Reading&lt;/a> 時拿了一個卡了一段時間的功能出來討論，過程中發現在我們學習軟體開發的經驗中，對於抽象化的訓練大多只停留在「定義一個 Animal 物件」這個層次的理解。&lt;/p>
&lt;p>花了一點時間大致上讀了一遍維基百科 &lt;a href="https://en.wikipedia.org/wiki/Abstraction_(computer_science)">Abstraction&lt;/a> 的條目，也驗證了我感受到的狀況。&lt;/p></description><content:encoded>&lt;p>最近在帶同事做 &lt;a href="https://www.scrum.org/resources/blog/temperature-reading-retrospective">Temperature Reading&lt;/a> 時拿了一個卡了一段時間的功能出來討論，過程中發現在我們學習軟體開發的經驗中，對於抽象化的訓練大多只停留在「定義一個 Animal 物件」這個層次的理解。&lt;/p>
&lt;p>花了一點時間大致上讀了一遍維基百科 &lt;a href="https://en.wikipedia.org/wiki/Abstraction_(computer_science)">Abstraction&lt;/a> 的條目，也驗證了我感受到的狀況。&lt;/p>
&lt;h2 id="requirement">需求&lt;/h2>
&lt;p>先來簡單提一下這個功能的需求，簡單來說是要讓公司的 Data PM（負責維護資料）可以更新我們系統中提供給客戶的資訊。在我們的團隊大部分是以微服務（Microservice）方式來組織系統，因此會涉及到 PM 操作的介面，以及更新、蒐集資料的服務。&lt;/p>
&lt;p>這個功能並不複雜，用很簡單的使用者故事（User Story）就可以描述。&lt;/p>
&lt;ul>
&lt;li>這裡有一批整理好的電話號碼，資料如下
&lt;ul>
&lt;li>886 165, 安全&lt;/li>
&lt;li>886 0938 111 222, 詐騙&lt;/li>
&lt;li>（略）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>身為 Data PM，我可以上傳資料&lt;/li>
&lt;li>當我上傳資料後，會看到「資料已上傳，約 1 小時後完成更新」的訊息&lt;/li>
&lt;/ul>
&lt;p>在這個需求裡面，我們要做的事情是將上傳的資料做一次預處理（標記回報者、檢查格式）然後呼叫我們的資料處理服務，將資料集（Dataset）轉交出去由專門的服務進行處理。&lt;/p>
&lt;p>實際上這個機制並不複雜，為什麼同事會在 Code Review 一直被要求重新調整呢？&lt;/p>
&lt;h2 id="common-way">常見做法&lt;/h2>
&lt;p>我們團隊是採用 Clean Architecture 的方式來規劃系統，但是這邊我們先以常見會使用 MVC 框架的處理方式來看，也不考慮各種複雜的情境。&lt;/p>
&lt;p>以 Ruby on Rails 作為例子，我們可能會有類似這樣的實作。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NumberDatasetController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="c1"># 處理資料&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">dataset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:dataset&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">read&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">proprocessor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">CsvDatasetPreprocessor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">cleaned_dataset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">proprocessor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dataset&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">cleaned_dataset&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:user_id&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="c1"># 上傳資料&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="n">data_api&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">DataService&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_numbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cleaned_dataset&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="c1"># 發布通知&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">notifier&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">UpdatedNotifier&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">NumberUpdatedEvent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="n">notifier&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">notifier&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這段程式大部分的人都能順利實作出來，在很多情況下也是足夠滿足需求的狀況。然而，我們以文章開維基百科在抽象化的描述來看，我們很可能只做了流程抽象化（Control abstraction）在其他地方都沒有細緻的處理。&lt;/p>
&lt;p>這在比較不複雜的系統上還可以靠記憶力或者文件之類的處理，然而較大的系統就會變成一個學習成本，因為我們需要知道非常多細節。&lt;/p>
&lt;p>舉例來說，&lt;code>DatasetPreprocessor&lt;/code> 是處理哪些資料集、&lt;code>DataService::Client&lt;/code> 提供了哪些操作、&lt;code>UpdatedNotifier&lt;/code> 能發佈哪類型的事件等等，都需要有文件或者有經驗的人才知道操作細節，當這類物件大量出現後，就很難維護。&lt;/p>
&lt;h2 id="clean-architecture-way">Clean Architecture 的方式&lt;/h2>
&lt;p>如果放到 Clean Architecture 的角度，我們又會怎麼看待這件事情呢？我認為可以從 Layered architecture 這個抽象化的角度去看，在 Clean Architecture 書中，我們區分了 Framework、Adapter、Use Case、Entity 四個層級，剛好在每個層級都有不同的抽象化目標。&lt;/p>
&lt;p>接下來我用 Golang 來舉例，因為我們有個明確的介面（Interface）定義會更容易理解背後的理由。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1">// internal/usecase/interface.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">NumberDatasetParser&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nf">Parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataset&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">entity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NumberDataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">DatasetUpdater&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nf">UpdateNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataset&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">entity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NumberDataset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1">// internal/usecase/batch_number_update.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">BatchNumberUpdateUseCase&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nx">parser&lt;/span> &lt;span class="nx">NumberDatasetParser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="nx">updater&lt;/span> &lt;span class="nx">DatsetUpdater&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="nx">notifier&lt;/span> &lt;span class="nx">Notifier&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">uc&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">BatchNumberUpdateUseCase&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">input&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">BatchNumberUpdateInput&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">BatchNumberUpdateOutput&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="nx">dataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">uc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">input&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dataset&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="nx">dataset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ApplyUserId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">input&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UserId&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">uc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updater&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">UpdateNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataset&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="nx">event&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewNumberUpdatedEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">uc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">notifier&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">BatchNumberUpdateOutput&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>從上面的實作看起來跟在 MVC 框架中常見的做法似乎沒有什麼不同，那麼為什麼有更好的抽象化呢？難道單純只是多了介面定義嗎？&lt;/p>
&lt;p>這是因為我們只看到了 Use Case（使用者案例）的部分，也就是需求本身的實作。當我們在思考實現這個需求時，我們對於「處理資料集」「轉交資料集」這兩件事情的描述，是哪一種類呢？&lt;/p>
&lt;ol>
&lt;li>使用 &lt;code>CSV&lt;/code> 格式處理、由 &lt;code>DataService&lt;/code> 接收&lt;/li>
&lt;li>使用 Parser 取得 Dataset 物件、由 Updater 受理&lt;/li>
&lt;/ol>
&lt;p>假設是 1 的版本，那麼就跟前面直接在 Controller 上實作的狀況是差不多的，抽象化的程度較低。因為我們還知道 &lt;code>CSV&lt;/code> 和 &lt;code>DataService&lt;/code> 這樣的細節。&lt;/p>
&lt;p>當我們轉換到了 Clean Architecture 時，對一個 Use Case 來說他只知道他可以透過某種方式實現特定的目的，所以在 Use Case 觀點中看到的是一種資料處理行為（Praser）跟一種資料更新行為（Updater）這就很考驗我們在選擇詞彙的能力，命名就變成軟體開發最困難的地方。&lt;/p>
&lt;p>在這個前提下，Clean Architecture 的 Adapter Layer 就會提供很多物件去支持 Use Case Layer 的需要，我們以 &lt;code>DatasetUpdater&lt;/code> 為例子。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">NumberDatasetUpdater&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="nx">numberService&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">numberservice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nx">smsService&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">smsservice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">u&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">InternalDatasetUpdater&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">UpdateNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dataset&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">entity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NumberDataset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">request&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">numberservice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewUpdateRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">item&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">dataset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Items&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Rating&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">u&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">numberService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這邊刻意的在 &lt;code>DatasetUpdater&lt;/code> 上加入了 &lt;code>smsService&lt;/code> 這個 API Client 定義，此時就能理解為什麼 &lt;code>DatasetUpdater&lt;/code> 不是用 &lt;code>Update(context.Context, *entity.NumberDataset)&lt;/code> 而是用 &lt;code>UpdateNumbers()&lt;/code> 命名，因為在 Use Case 的角度他認爲這個 Updater 是可以更新多種資料的。&lt;/p>
&lt;p>當然，是否要這樣設計就取決於開發團隊的判斷。這也衍生出另一個有趣的議題，我們在工作中會抱怨 PM 的規格說不清楚，但是我們真正想看到的是什麼？這造成很多 PM 會把「設計細節」一起寫在產品需求上，反而讓工程師失去抽象思考、專業判斷的機會，即使這個規格有時候確實需要寫這麼清楚。&lt;/p>
&lt;p>至少，未來我們可以在開發時思考這類問題。如果在一個使用案例中，把一個使用者需求處理完，我們需要在初期就搞清楚他會使用 CSV 還是 JSON 上傳，還是只需要知道存在「解析」「轉交」這樣的流程就足夠進行開發了？&lt;/p>
&lt;blockquote>
&lt;p>受限於篇幅還有不少可以延伸討論的，像是 &lt;code>entity.NumberDataset&lt;/code> 是否也是一種抽象的類型，我們從單純的 Array 轉變叫做 NumberDataset 的抽象概念，並且限制了能操作的行為，同時也統一在 Use Case 中使用的名詞等等&lt;/p>
&lt;/blockquote></content:encoded></item><item><title>Output - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/11/22/rethink-rails-architecture-output/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 22 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/22/rethink-rails-architecture-output/</guid><description>&lt;p>在 Form Object 的階段有提過 Input Object 的概念，與之相對的則是 Output Object 的機制，這兩個物件也正好對應 Clean Architecture 中所提到的 Input Port 和 Output Port 的應用。&lt;/p></description><content:encoded>&lt;p>在 Form Object 的階段有提過 Input Object 的概念，與之相對的則是 Output Object 的機制，這兩個物件也正好對應 Clean Architecture 中所提到的 Input Port 和 Output Port 的應用。&lt;/p>
&lt;h2 id="output-object">Output Object&lt;/h2>
&lt;p>Output Object 從定義上來說，可以很直覺的理解為 Use Case（使用案例）的回傳，即使我們像加入 Repository 後將 Entity 直接曝露給 Controller 也沒有問題。那麼為什麼還會有 Output Object 的需求存在呢？&lt;/p>
&lt;p>現今大部分的軟體開發情境中，我們都會使用開發框架來協助開發，假設未來有需要更換框架（或者語言）就會遇到有大量的依賴（Dependency）在框架上的問題。為了對應這樣的狀況，合理的做法就是從 Use Case 作為基準跟框架切開，那麼 Use Case 就必須知道如何回傳結果，相比 Input Object 可以利用介面的方式定義，Output Object 就必定需要跟 Use Case 共存。&lt;/p>
&lt;p>舉例來說，假設我們像 Form 的設計一樣使用了 &lt;code>include ActiveModel::Model&lt;/code> 那麼在替換到其他框架（如：&lt;a href="https://hanamirb.org/">Hanami.rb&lt;/a>）就必須要加入 ActiveModel 的 Gem 才能使用，然而以 PORO（Plain Old Ruby Object）就能自由的替換，而保有原有的功能。&lt;/p>
&lt;p>一般來說 Input / Output 兩種物件都是 Read-only 和 Serializable（可序列化）的特性。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># lib/shipments/data/shipment.rb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="no">Shipment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">Data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">define&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:routes&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">eql?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># lib/shipments/data/route.rb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="no">Route&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">::&lt;/span>&lt;span class="no">Data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">define&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:delivered_at&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">eql?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>舉例來說，在 Ruby 3.2 就增加了 &lt;code>Data&lt;/code> 類型物件，剛好可以滿足這樣的要求，或者我們直接使用 Ruby 的 &lt;code>Hash&lt;/code> 也可以符合條件。&lt;/p>
&lt;p>至於 Use Case 則針對實作調整，將原本的 Entity（實體）做一次轉換&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">AddRoute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">date&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">time&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">build_shipment_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="kp">private&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">build_shipment_output&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="no">Data&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="no">Data&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">routes&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>雖然這樣的設計相當繁瑣，然而也能夠避免在傳遞到 Controller 還被修改或者操作的可能性，就能將相關的邏輯盡可能的集中在 Use Case 上，讓設計更明確。&lt;/p>
&lt;h2 id="rendering">Rendering&lt;/h2>
&lt;p>在 Controller 收到這個物件後，我們可直接的呈現出來，然而會發現測試是失敗的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RoutesController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這是因為我們預期的呈現跟實際的呈現有差異，這類情況通常就會由 Presenter（表現）類型的物件處理，至於 Rails 使用 View 的機制來實現基本上就非常足夠。&lt;/p>
&lt;p>將原本的 &lt;code>render json: shipment&lt;/code> 先替換為 &lt;code>@shipment = command.execute(**input)&lt;/code> 的版本，讓 Controller 可以把 &lt;code>@shipment&lt;/code> 傳遞給 View。&lt;/p>
&lt;p>因為這次預設是 JSON 的內容，將 &lt;code>config/routes.rb&lt;/code> 的內容也做調整。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">draw&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:shipments&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">module&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:shipments&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">only&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:create&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">defaults&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:json&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最後，就可以利用 &lt;code>jbuilder&lt;/code> 來做呈現上的處理。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># app/view/shipments/routes/create.json.jbuilder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">route_id&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipment_id&lt;/span> &lt;span class="vi">@shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跟直接對 Output 做 Serialize 處理不同的地方在 &lt;code>routes&lt;/code> 中是使用 &lt;code>route_id&lt;/code> 以及多了一個 &lt;code>shipment_id&lt;/code> 欄位，假設實務上沒有這樣的需求存在，可以統一後會更加簡單。&lt;/p>
&lt;p>這一系列的實作可以觀察到，假設整體系統不複雜的情境下，是沒有必樣做出這樣的拆分，然而隨系統變得複雜後，將職責跟任務明確劃分就會自然出現這類物件，並不一定要刻意進行或者一次性的實踐，只要避免低階元件（Low-Level Component）被高階元件（High-Level Component）依賴的情況（如 &lt;code>lib/&lt;/code> 下的實作使用了 &lt;code>app/&lt;/code> 的物件，就違反原則）&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Repository - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/11/15/rethink-rails-architecture-repository/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 15 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/15/rethink-rails-architecture-repository/</guid><description>&lt;p>當我們將運送模組（取 &lt;code>module Shipments&lt;/code> 的方式稱呼）的實體（Entity）確立下來後，就可以來處理倉庫（Repository）也就是我們的資料如何保存的議題。在某些軟體開發的最佳實踐中，會建議推遲資料庫的設計，就是因為一但確定後就難以修改。&lt;/p>
&lt;p>依照這次的流程，我們在接近功能完成時才處理，能省去不少前期就確定資料表結構的問題。&lt;/p></description><content:encoded>&lt;p>當我們將運送模組（取 &lt;code>module Shipments&lt;/code> 的方式稱呼）的實體（Entity）確立下來後，就可以來處理倉庫（Repository）也就是我們的資料如何保存的議題。在某些軟體開發的最佳實踐中，會建議推遲資料庫的設計，就是因為一但確定後就難以修改。&lt;/p>
&lt;p>依照這次的流程，我們在接近功能完成時才處理，能省去不少前期就確定資料表結構的問題。&lt;/p>
&lt;h2 id="migration">Migration&lt;/h2>
&lt;p>透過前面的實作，我們基本上確定只需要有 Shipment Route 的資訊就足以構成現階段的 Shipment 實體，因此只需要加入一張 &lt;code>shipment_routes&lt;/code> 資料表即可。&lt;/p>
&lt;p>使用 &lt;code>rails generate&lt;/code> 命令產生一個 &lt;code>ShipmentRoute&lt;/code> Model 來提供這個機制。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">CreateShipmentRoutes&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ActiveRecord&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Migration&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">change&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="n">create_table&lt;/span> &lt;span class="ss">:shipment_routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">primary_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:name&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bigint&lt;/span> &lt;span class="ss">:shipment_id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="ss">:name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datetime&lt;/span> &lt;span class="ss">:delivered_at&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timestamps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跟我們習慣直接使用 &lt;code>id&lt;/code> 當作 Primary Key 不同的地方在於，我們使用 &lt;code>shipment_id&lt;/code> 和 &lt;code>name&lt;/code> 來作為主鍵，因為從前面的功能判斷這兩個組合是不會重疊的情境，因此適合用於這個狀況。&lt;/p>
&lt;blockquote>
&lt;p>假設一開始就要決定，我們可能就會採用 &lt;code>id&lt;/code> 搭配 &lt;code>shipment_id&lt;/code> 和 &lt;code>route_id&lt;/code> 的設計，在維護上可能就會變得更複雜一些。&lt;/p>
&lt;/blockquote>
&lt;h2 id="repository">Repository&lt;/h2>
&lt;p>我們產生的 &lt;code>ShipmentRoute&lt;/code> 基本上可以直接當作 Repository 使用，因此可以像這樣實作。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ShipmentRoute&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationRecord&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="n">scope&lt;/span> &lt;span class="ss">:by_shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:delivered_at&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">by_shipment_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">transaction&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_or_create_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tap&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">shipment_route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment_route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nc">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nf">find_shipment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">by_shipment_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="no">Shipments&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tap&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這裡做了幾個處理，首先是用 &lt;code>by_shipment_id&lt;/code> 的 Scope 來定義查詢的行為，接下來設計了 &lt;code>.save&lt;/code> 和 &lt;code>.find_shipment&lt;/code> 兩個方法，用於產生 &lt;code>Shipment&lt;/code> 物件以及儲存修改。&lt;/p>
&lt;p>在這個部分會跟以往我們認知到的 Model 差異很多，基本上不會去定義實例方法反而是 Class Method 更多，然而這個做法不一定能很好對應更複雜的情境，因此還可以繼續切分成獨立的 &lt;code>Repository&lt;/code> 物件類型放到 &lt;code>app/repositories&lt;/code> 中來維護。&lt;/p>
&lt;blockquote>
&lt;p>這裡是用於相對簡單情境的案例，實際的專案還是會推薦切分出 Repository 會更好一些。&lt;/p>
&lt;/blockquote>
&lt;h2 id="adjust-usecase">調整 Use Case&lt;/h2>
&lt;p>有了 Repository 後，原本我們在 Use Case 上的處理就會變得更加明確，也能很快地理解意圖。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">AddRoute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:timezone_repository&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:shipment_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">timezone_repository&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">shipment_repository&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="vi">@timezone_repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timezone_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="vi">@shipment_repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">date&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">time&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment_repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_shipment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="n">timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">to_timezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timezone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment_repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的調整可以看到 &lt;code>Shipment&lt;/code> 會透過具備 &lt;code>#find_shipment&lt;/code> 方法的 Repository 來找生成對應的物件，在處理完畢後，呼叫 &lt;code>#save&lt;/code> 方法來保存，這樣就不會依賴 Rails 的 ActiveRecord 只要能夠提供這兩個方法就可以運作。&lt;/p>
&lt;p>因為回傳改變，我們也先對 Controller 做調整，因為 &lt;code>Shipment&lt;/code> 物件不適合被 Controller 依賴，因此後續會再做調整。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RoutesController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">CreateRouteInput&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">route_params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">command&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Shipments&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">AddRoute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="ss">timezone_repository&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ActiveSupport&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">TimeZone&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_repository&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ShipmentRoute&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">command&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="ss">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="ss">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="update-step-definition">更新測試&lt;/h2>
&lt;p>現在我們的測試會需要對應真實資料，是時候把一開始撰寫測試跳過的步驟定義（Step Definition）實作進去。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="no">Given&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;there have some shipment route&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">table&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">row&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;route_id&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="no">ShipmentRoute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因為我們在 Cucumber 是使用 &lt;code>route_id&lt;/code> 來作為定義，因此需要針對這筆資料替換成儲存到資料庫的 &lt;code>name&lt;/code> 就能順利運行。&lt;/p>
&lt;p>也可以調整測試的描述，直接使用 &lt;code>name&lt;/code> 就可以減少額外的處理，大多數情境我也會偏好這種方式讓 Cucumber 的步驟定義更簡單一些。&lt;/p>
&lt;p>接下來就是針對 &lt;code>Shipment&lt;/code> 物件回傳給 Controller 的處理，增加一個封裝避免實體直接暴露到外面。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Entity - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/11/08/rethink-rails-architecture-entity/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 08 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/08/rethink-rails-architecture-entity/</guid><description>&lt;p>到 Use Case 階段我們已經初步跟 Rails 框架做出區隔，建構出屬於我們的 Domain Model（領域模型）然而在 Use Case 中含有許多核心概念的處理並沒有被抽離出來，這些東西就是 Entity（實體）也就是整個領域中要處理的對象（Object）&lt;/p></description><content:encoded>&lt;p>到 Use Case 階段我們已經初步跟 Rails 框架做出區隔，建構出屬於我們的 Domain Model（領域模型）然而在 Use Case 中含有許多核心概念的處理並沒有被抽離出來，這些東西就是 Entity（實體）也就是整個領域中要處理的對象（Object）&lt;/p>
&lt;h2 id="aggregate">Aggregate&lt;/h2>
&lt;p>在我們的設計中 Shipment（運送）會合併多個 Route（路徑）來構成，通常具備這種將一些可以獨立識別的物件整合起來的情況，我們會用 Aggregate（聚合）來看待。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">Shipment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:routes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="vi">@id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">State&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:pending&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="vi">@routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">add_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="n">route&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="no">ArgumentError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Route already delivered&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deliver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">shipping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">shipping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">State&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pending&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">State&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">delivered&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">State&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">State&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">eql?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> &lt;span class="k">alias&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">eql?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述的例子描述了 &lt;code>Shipment&lt;/code> 物件能夠進行 &lt;code>#add_route&lt;/code> 的操作，而且當新增路由時，會嘗試變更為 &lt;code>shipping&lt;/code> 的狀態。&lt;/p>
&lt;p>這段程式碼雖然簡單，但是很好的呈現出運送處理的意圖，不使用 Rails 的 Model 來做這件事情，其中一個原因是我們希望所有屬性都是 Read-only 的，或者說不能被 &lt;code>Shipment&lt;/code> 以外的物件改變，來確不會有預期外的修改，然而 Rails 的 Model 則是將全部屬性都設計為可修改，就不符合我們的期待。&lt;/p>
&lt;h2 id="entity">Entity&lt;/h2>
&lt;p>基本上只要是以 ID 或者任何可以用於唯一識別當作比較條件的物件，都可以視為一種 Entity 類型，因此扮演 Aggregate 角色的 Shipment 或者其下的 Route 都可以當作一種 Entity 來看。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">Route&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:delivered_at&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="vi">@id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="vi">@delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">deliver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="vi">@delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">delivered_at&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">eql?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="k">alias&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">eql?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本上使用純 Ruby 物件（PORO）來處理的用意，跟 &lt;code>Shipment&lt;/code> 是相同的，我們希望利用物件的封裝來限制可用的行為，確保修改是可預期的。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>Shipment&lt;/code> 和 &lt;code>Route&lt;/code> 都實作了 &lt;code>#==&lt;/code> 和 &lt;code>#eql?&lt;/code> 方法，並且只會對 &lt;code>id&lt;/code> 屬性比較來判斷是否為相同的物件&lt;/p>
&lt;/blockquote>
&lt;h2 id="value-object">Value Object&lt;/h2>
&lt;p>Value Object 在 Rails 中經常會看到，在使用上也沒有太大的差異。要注意的是這類物件都是不可變（Immutable）的形式存在，也因此我們可以透過比較內容來判斷是否為相同的數值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">State&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="no">ALLOWED_STATES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">pending&lt;/span> &lt;span class="n">shipping&lt;/span> &lt;span class="n">delivered&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="nb">self&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">pending&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="kp">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:pending&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">shipping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="kp">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:shipping&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">delivered&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="kp">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:delivered&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="no">ArgumentError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Invalid state: &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="no">ALLOWED_STATES&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">include?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">eql?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">other&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="k">alias&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">eql?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">to_s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="vi">@state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">as_json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="nb">to_s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在這裡提供了一些 Factory Method 方便使用，因此在 &lt;code>Shipment&lt;/code> 物件中切換狀態時，可以用 &lt;code>state == State.pending&lt;/code> 來判斷，要在更進一步讓意圖更加清楚的話，可以定義像是 &lt;code>#shipping?&lt;/code> 的方法來替換掉 &lt;code>state == State.pending&lt;/code> 的實作。&lt;/p>
&lt;p>基本上 Entity 相關的實作，都是單純 Ruby 的定義，然而卻是整個系統中最核心的部分，也是我們一層一層提取出來的關鍵行為。&lt;/p>
&lt;h2 id="update-use-case">更新 Use Case&lt;/h2>
&lt;p>有了 Entity 後，我們就可以把 Use Case 調整，實作的內容會比上一個版本更加直覺，能夠一眼就看出 &lt;code>Command::AddRoute&lt;/code> 想要做的處理。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">AddRoute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">date&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">time&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="n">timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">to_timezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="n">delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timezone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="n">route&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="n">shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因為我們還沒有實作 Repository 用來還原狀態，因此先手動的將測試所需的狀態製作出來，後續的 &lt;code>shipment.add_route(route_id:, delivered_at:)&lt;/code> 實作，就能讓人一眼看出 Add Route Command 內部是如何看待「增加運送節點」這一個概念。&lt;/p>
&lt;p>下一階段我們會整合 Rails 的 Model 將 Repository 實作出來，以及討論 Shipments 資料表的必要性。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Use Case - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/11/01/rethink-rails-architecture-use-case/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 01 Nov 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/11/01/rethink-rails-architecture-use-case/</guid><description>&lt;p>處理完使用者的輸入後，就可以來著手實際的處理。通常會將這些實作放到 &lt;code>app/&lt;/code> 目錄下，然而當我們要以一個 Domain（領域）來劃分時，使用 &lt;code>lib/&lt;/code> 來放置這些實作可能更加恰當，未來要轉換框架或者搬移，就只需要移動 &lt;code>lib/&lt;/code> 而不會和 Rails 綁定。&lt;/p></description><content:encoded>&lt;p>處理完使用者的輸入後，就可以來著手實際的處理。通常會將這些實作放到 &lt;code>app/&lt;/code> 目錄下，然而當我們要以一個 Domain（領域）來劃分時，使用 &lt;code>lib/&lt;/code> 來放置這些實作可能更加恰當，未來要轉換框架或者搬移，就只需要移動 &lt;code>lib/&lt;/code> 而不會和 Rails 綁定。&lt;/p>
&lt;h2 id="command-object">Command Object&lt;/h2>
&lt;p>就我個人而言，會喜歡將 UseCase 分為 Command（命令）和 Query（查詢）兩種類型，方便區分寫入、讀取兩種不同情境，如果未來有需要實現 &lt;a href="https://martinfowler.com/bliki/CQRS.html">CQRS&lt;/a> 的設計，也更容易延伸出去完善。&lt;/p>
&lt;p>因為 Rails 預設不會載入 &lt;code>lib/&lt;/code> 目錄的內容，我們可以透過調整 &lt;code>config/application.rb&lt;/code> 來支援這個行為。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># config/application.rb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">Application&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">Rails&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">autoload_lib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">ignore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sx">%w[assets tasks generators]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這個方式雖然方便，然而我們希望以套件的型式存在時，自行加入 &lt;code>require_relative&lt;/code> 來處理可能會更加恰當。&lt;/p>
&lt;p>接著實作一個 &lt;code>CreateRoute&lt;/code> 的 Command 在 &lt;code>lib/shipments/command/create_route.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">module&lt;/span> &lt;span class="nn">Command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">AddRoute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="no">TIMEZONE_MAPPING&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="s1">&amp;#39;TPE&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Asia/Taipei&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Asia/Tokyo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:timezone_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">timezone_repository&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="vi">@timezone_repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timezone_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">date&lt;/span>&lt;span class="p">:,&lt;/span> &lt;span class="ss">time&lt;/span>&lt;span class="p">:)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="n">timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">to_timezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timezone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="o">[&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">delivered_at&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="kp">private&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">to_timezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="nb">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">TIMEZONE_MAPPING&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="n">timezone_repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>處理時間的部分跟前面實作的 Input Object 基本上是類似的，然而在這裡我們定義了一個 Timezone Repository 的介面，預期會有一個 &lt;code>#create&lt;/code> 行為產生我們期望的時區物件，並且提供一個 &lt;code>#parse&lt;/code> 方法讓我們針對時間解析。&lt;/p>
&lt;p>因為沒有任何實質對某個特定類型（Class）的依賴，即使替換到其他框架，只要能實作對應的方法就能夠繼續使用這段程式碼。&lt;/p>
&lt;h2 id="adjust-controller">調整 Controller&lt;/h2>
&lt;p>原本我們是透過 Input Object 來取得新增的 Route 資訊，然而現在有 Command 初步做了一些事情，我們可以讓 Controller 改為依賴這個 Command 處理，也讓 Controller 更接近協調任務的角色。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RoutesController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">CreateRouteInput&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">route_params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">command&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Shipments&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Command&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">AddRoute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">timezone_repository&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">ActiveSupport&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">TimeZone&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">delivered_at&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">command&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="ss">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;shipping&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="ss">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因為 &lt;code>ActiveSupport::TimeZone&lt;/code> 剛好具備了 &lt;code>.create&lt;/code> 方法，並且回傳的物件實例也有滿足 &lt;code>#parse&lt;/code> 的要求，因此剛好符合我們對 Timezone Repository 的介面，就可以直接當作參考傳遞給 Command 使用。&lt;/p>
&lt;p>另一方面，我們在 &lt;code>#execute&lt;/code> 是使用 Keyword Argument 來接收資訊，因此可以讓 Input Object 直接轉換成 Hash 傳遞進去，最後將回傳結構傳遞給我們暫時性寫死的結果即可。&lt;/p>
&lt;blockquote>
&lt;p>假設將 Input Object 規劃在 &lt;code>lib/shipments/input&lt;/code> 的話，這邊可以改為直接傳遞 Input 的方式，因為 &lt;code>lib/shipments&lt;/code> 在架構上會知道這個物件與相應的細節&lt;/p>
&lt;/blockquote>
&lt;h2 id="input-object">Input Object&lt;/h2>
&lt;p>接下來只需要修正我們的 Input Object 去除跟 Domain 相關（站點跟時區對應）的資訊，就可以讓這段程式碼正確運作起來。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">CreateRouteInput&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="vi">@route_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">route_id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="vi">@shipment_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="vi">@date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="vi">@time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">to_hash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="ss">date&lt;/span>&lt;span class="p">:,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="ss">time&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>目前的版本就更明顯是一個單純的物件，並且支援轉換成 Hash 的 Data Transfer Object（資料傳輸物件）&lt;/p>
&lt;p>這樣的實作、開發方式確實相對繁瑣，因此並不是要一開始就這樣發展，可以選擇在後續重構時，慢慢的將 Controller、Model 中相關的邏輯抽離出來。然而，系統一開始就具備一定程度的複雜度時，直接採用這樣的方式會更加恰當。&lt;/p>
&lt;p>接下來我們要繼續實作 Entity（實體）來完善一個完整的行為。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Form - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/10/25/rethink-rails-architecture-form/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 25 Oct 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/10/25/rethink-rails-architecture-form/</guid><description>&lt;p>實際對運送狀態進行處理之前，我們需要將 Rails 的 &lt;code>ActionController::Parameters&lt;/code> 轉換成可以使用的結構，這個結構通常可以看作是 Form Object。&lt;/p></description><content:encoded>&lt;p>實際對運送狀態進行處理之前，我們需要將 Rails 的 &lt;code>ActionController::Parameters&lt;/code> 轉換成可以使用的結構，這個結構通常可以看作是 Form Object。&lt;/p>
&lt;h2 id="form-object">Form Object&lt;/h2>
&lt;p>比起叫做 Form Object 我更偏好用 Input Object 來稱呼更為恰當，大多數情境中這個物件扮演了將使用者的輸入處理後，轉換成我們系統中可以實際使用的物件，扮演著輸入（Input）的角色。&lt;/p>
&lt;p>舉例來說，我們的系統可以接收 XML、JSON 等格式，假設每種格式都要個別解析，未來就可能會在每個使用案例（Use Case）中充滿相關的處理，而讓物件負責過多不相關的事情。&lt;/p>
&lt;p>至於 Form Object 則是在 Rails 中，我們希望將 Params（參數）直接傳遞給 Model 使用，但是不同的情境會有不一樣的欄位和條件，才衍伸出這樣的設計，在比較新版本的 Rails 中 Strong Parameters 的機制使用 &lt;code>#required&lt;/code> 和 &lt;code>#permit&lt;/code> 就足以滿足這樣的需求。&lt;/p>
&lt;blockquote>
&lt;p>以前曾經寫過 &lt;a href="https://blog.aotoki.me/posts/2019/05/28/How-to-use-Form-Object-and-others-for-Rails/">Form Object 的使用&lt;/a>來討論，從這個角度來看引入 &lt;code>ActiveModel&lt;/code> 並不是理想的設計，我們並不需要這麼複雜的機制。&lt;/p>
&lt;/blockquote>
&lt;h2 id="input-object">Input Object&lt;/h2>
&lt;p>Input Object 是一種用於傳遞資訊的物件（Data Transfer Object）同時在定位上，屬於使用案例的一部分，因此要避免跟框架有所耦合，才能夠在為來替換框架或者改寫時，減少相應的影響。&lt;/p>
&lt;p>要滿足現有的測試，我們可以追加一個 &lt;code>app/inputs/create_route_input.rb&lt;/code> 加入以下的實作&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">CreateRouteInput&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="c1"># NOTE: refactor to domain model&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="no">TZ&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="s1">&amp;#39;TPE&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Asia/Taipei&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Asia/Tokyo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="kp">attr_reader&lt;/span> &lt;span class="ss">:route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">:shipment_id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="vi">@route_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">route_id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="vi">@shipment_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shipment_id&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="vi">@date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="vi">@time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">timezone&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="no">TZ&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="vi">@route_id&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;UTC&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="c1"># NOTE: Use timezone interface instead `ActiveSuport::TimeZone`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">delivered_at&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="vi">@delivered_at&lt;/span> &lt;span class="o">||=&lt;/span> &lt;span class="no">ActiveSupport&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">TimeZone&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">timezone&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="vi">@date&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="vi">@time&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本上 Input Object 是一個很單純的物件，只負責用於記錄可以使用的參數，以 &lt;code>Struct&lt;/code> 或者 Ruby 3 的 &lt;code>Data&lt;/code> 物件來實作都很適合。&lt;/p>
&lt;p>上述的案例中，為了讓 Controller 對於 Domain 相關的知識減少，因此先將 Route 和時區的對應，以及轉換時區的處理放到裡面，在開發初期可以暫時性的這樣實作，後續完成功能時則不應該出現這樣的狀況。&lt;/p>
&lt;h2 id="adjust-controller">調整 Controller&lt;/h2>
&lt;p>加入 Input Object 是為了讓我們的核心功能不和 &lt;code>ActiveController::Parameters&lt;/code> 耦合再一起有依賴關係，接下來調整 Controller 並且確認功能運作正常。&lt;/p>
&lt;blockquote>
&lt;p>使用 &lt;code>params&lt;/code> 時，&lt;code>ActiveController::Parameters&lt;/code> 實作了 Hash 的介面，並不會有耦合的問題，使否需要 Input Object 可以視需求判斷調整，但是要盡量統一做法。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RoutesController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="n">rescue_from&lt;/span> &lt;span class="no">ActionController&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">ParameterMissing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">with&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:render_bad_request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="n">input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">CreateRouteInput&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">route_params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="ss">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;shipping&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="ss">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">route_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shipment_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delivered_at&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="kp">private&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">route_params&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="n">params&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">route_id&lt;/span> &lt;span class="n">shipment_id&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">render_bad_request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="ss">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">#{&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> is required&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="ss">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:bad_request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>經過調整後，假設我們沒有正確的填入必要欄位會得到錯誤訊息，同時原本的輸入也可以從 Input Object 解析出來，並且提供給我們回傳內容使用。&lt;/p>
&lt;p>這個階段處理完畢後，我們就可以實際進入 Use Case 來實作相關的邏輯。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>Controller - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/10/18/rethink-rails-architecture-controller/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 18 Oct 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/10/18/rethink-rails-architecture-controller/</guid><description>&lt;p>有了第一個 Cucumber 撰寫的測試後，我們對於更新運送狀態的行為有一定的概念，那麼就可以針對這個機制來進行 Controller 的實作。&lt;/p></description><content:encoded>&lt;p>有了第一個 Cucumber 撰寫的測試後，我們對於更新運送狀態的行為有一定的概念，那麼就可以針對這個機制來進行 Controller 的實作。&lt;/p>
&lt;h2 id="route">路由&lt;/h2>
&lt;p>首先，要讓 &lt;code>POST /shipments/:id/routes&lt;/code> 這個端點可以被存取，因此需要在 Rails 的路由設定中加入以下的內容。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="no">Rails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">draw&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="c1"># Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="c1"># Defines the root path route (&amp;#34;/&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="c1"># root &amp;#34;articles#index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:shipments&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">module&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ss">:shipments&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="n">resources&lt;/span> &lt;span class="ss">:routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ss">only&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="ss">:create&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這樣一來 Rails 就會知道要使用哪個 Controller 來處理，這是大多數開發者很直覺能實踐的事情，然而在 &lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html">Clean Architecture&lt;/a> 的角度分析，這是一個低階元件，也就是描述細節的資訊。&lt;/p>
&lt;p>因此會被分類在最外圈 Framework &amp;amp; Drivers 這一階段，這類型的物件通常會跟環境有很深的連結，因此當我們要改為使用 gRPC 之類的方式互動時，這些實作就無法繼續使用，就 Rails 的角色，就只能針對 Web（HTTP 協定）的情境。&lt;/p>
&lt;h2 id="controller">控制器&lt;/h2>
&lt;p>Controller 想必也不需要特別討論，在這個階段我們要先讓 Cucumber 的測試通過，因此可以直接將輸出寫死。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="nn">Shipments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="k">class&lt;/span> &lt;span class="nc">RoutesController&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="no">ApplicationController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">render&lt;/span> &lt;span class="ss">json&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="ss">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;shipping&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="ss">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;OKA&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="ss">route_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;TPE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="ss">shipment_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="ss">delivered_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="no">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在應用到 Clean Architecture 時，可能就會有一些爭議出現。因為我們以往的經驗，會把處理的行為設計在 Controller 中，那麼這樣算是一種 Use Case（使用案例）的類型嗎？&lt;/p>
&lt;p>然而，在 Clean Architecture 由外向內的第二圈舉例中有 Controller 並且歸類為 Interface Adapter（介面轉接器）的類型，這是否表示我們不該在 Controller 中有實際的商業邏輯呢？&lt;/p>
&lt;h2 id="reflection">反思&lt;/h2>
&lt;p>意識到這個問題後我做了不少思考，大致上來說這件事情並沒有一個絕對正確的答案，或者說他是一個系統發展過程中的一個階段。&lt;/p>
&lt;p>在 Clean Architecture 中並沒有限制切分的層級數，書中以四層為例子確實是大部分情境都通用的情況，那麼 Rails 採用的 Model View Controller（MVC）設計，我認為可以看作是只有兩層的情況，也就是指具備 Framework &amp;amp; Drivers 和 Interface Adapter 的情境。&lt;/p>
&lt;p>從另一個角度來看，當下的 Interface Adapter 因為跟實際的 Use Case 處理的內容非常一致，因此也沒有特別要做 Adapt（適應） 的必要，只需要直接使用即可。&lt;/p>
&lt;p>然而，從職責的角度來看，隨著在 Controller 中實作的邏輯增長，會開始出現需要拆分職責的情況，剛開始可能會用 Fat Model 的模式來做，然而不論怎樣處理最後還是會有職責過多的狀況，進而需要切分出新的物件類型，而 Service Object 這類 Rails 常見的物件也因此而生。&lt;/p>
&lt;p>直到這個階段，才開始出現更向內的第三、第四層級，也才開始有明確的 Use Case 和 Entity（實體）的劃分跟界定。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item><item><title>驗收測試 - 重新思考 Rails 架構</title><link>https://blog.aotoki.me/posts/2024/10/11/rethink-rails-architecture-acceptance-test/</link><category>Rails</category><category>Domain-Driven Design</category><category>設計</category><category>Clean Architecture</category><pubDate>Fri, 11 Oct 2024 00:00:00 +0800</pubDate><author>contact@aotoki.me (蒼時弦也)</author><guid>https://blog.aotoki.me/posts/2024/10/11/rethink-rails-architecture-acceptance-test/</guid><description>&lt;p>在實際開始實作之前，透過測試確認行為以及開發過程中進行驗證都會是個不錯的方式。我們會透過 &lt;a href="https://blog.aotoki.me/series/test-with-cucumber/">Cucumber 的文件測試法&lt;/a>中的方式，來描述一個運送狀態更新的設計。&lt;/p></description><content:encoded>&lt;p>在實際開始實作之前，透過測試確認行為以及開發過程中進行驗證都會是個不錯的方式。我們會透過 &lt;a href="https://blog.aotoki.me/series/test-with-cucumber/">Cucumber 的文件測試法&lt;/a>中的方式，來描述一個運送狀態更新的設計。&lt;/p>
&lt;h2 id="describe-feature">描述功能&lt;/h2>
&lt;p>假設我們要實現一個跨時區的物流運送流程，那麼可以撰寫如下的測試。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gherkin" data-lang="gherkin">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">Feature:&lt;/span>&lt;span class="nf"> Shipment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Scenario:&lt;/span>&lt;span class="nf"> I can update the simpment route
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> Given &lt;/span>&lt;span class="nf">there have some shipment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> id&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> state&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> 1&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> shipping&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">And &lt;/span>&lt;span class="nf">there have some shipment route
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> route_id&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> shipment_id&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> delivered_at&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> OKA&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> 1&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="s"> 2024-03-19T00:00:00Z&lt;/span>&lt;span class="k"> |&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">When &lt;/span>&lt;span class="nf">I make a POST request to &amp;#34;&lt;/span>&lt;span class="s">/shipments/1/routes&lt;/span>&lt;span class="nf">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;route_id&amp;#34;: &amp;#34;TPE&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;date&amp;#34;: &amp;#34;0319&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;time&amp;#34;: &amp;#34;1000&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Then &lt;/span>&lt;span class="nf">the response should be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;id&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;state&amp;#34;: &amp;#34;shipping&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;routes&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;route_id&amp;#34;: &amp;#34;OKA&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;shipment_id&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;delivered_at&amp;#34;: &amp;#34;2024-03-19T00:00:00.000Z&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="s"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;route_id&amp;#34;: &amp;#34;TPE&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;shipment_id&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;delivered_at&amp;#34;: &amp;#34;2024-03-19T02:00:00.000Z&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl">&lt;span class="s"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">&lt;span class="s"> &lt;/span>&lt;span class="k">&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="nf">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的例子我們透過描述 API 的行為，來呈現一些資訊。&lt;/p>
&lt;ul>
&lt;li>運送狀態是對應某筆訂單&lt;/li>
&lt;li>運送過程會有多個路徑（Route）&lt;/li>
&lt;li>填入時間時，會以 &lt;code>date&lt;/code> 和 &lt;code>time&lt;/code> 的格式搭配，並且以當地時間為基準&lt;/li>
&lt;/ul>
&lt;p>除此之外，在系統的設計中我們預期 Order 和 Shipment 是一對一的關係，因此在這裡不會有 &lt;code>order_id&lt;/code> 的欄位，從實體（Entity）的角度來看辨識 Order 和辨識 Shipment 是相同的。&lt;/p>
&lt;p>然而，在 Route 的觀點來看，一個實體會是 Shipment ID + Route ID 的組合，上述的情境中我們仍可以使用資料庫的 Auto Increment 機制來管理，然而在實際使用時不一定會直接參考資料庫的流水號。&lt;/p>
&lt;blockquote>
&lt;p>針對回傳內容的檢查，因為完整比對 JSON 有時候不一定是個好的處理方式，可以考慮利用 JMESPath 這類套件，使用 &lt;code>routes[0].route_id&lt;/code> 來找到 &lt;code>OKA&lt;/code> 進行比對，會相對有彈性&lt;/p>
&lt;/blockquote>
&lt;h2 id="step-definition">步驟定義&lt;/h2>
&lt;p>有了測試的步驟後，就可以來撰寫步驟定義。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="no">Given&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;there have some shipment&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="n">table&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="no">Shipment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="no">Given&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;there have some shipment route&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">table&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="no">ShipmentRoute&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="no">When&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;I make a POST request to {string}&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">raw_body&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">raw_body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="vi">@response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">post&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">body&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="no">Then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;the response should be&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">raw_body&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="n">expected&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">raw_body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="n">actual&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vi">@response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">actual&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span> &lt;span class="n">eq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">expected&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我們直接透過 ActiveRecord 定義的 Model 來生成測試用的資料，並且直接對回傳的內容轉換成 JSON 進行比對，這樣就可以有初步的雛形。&lt;/p>
&lt;blockquote>
&lt;p>實際開發時會盡可能推遲 Model 層級的實作，因為這系列的重點不在測試的實作，因此會跳過比較多細節。&lt;/p>
&lt;/blockquote>
&lt;p>接下來就可以切入到 Controller 的部分來進行實作，至於測試案例可以根據情況在這個階段多描述並以 &lt;code>@wip&lt;/code> 標記註記會在之後處理，或者在後續開發時有發現新的案例時補上。&lt;/p></content:encoded><media:content url="https://blog.aotoki.me/cover/2024-rethink-rails-architecture.jpg" type="image/jpeg" medium="image"/></item></channel></rss>