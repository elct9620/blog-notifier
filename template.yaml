AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  The notification system for blog.aotoki.me

Parameters:
  Namespace:
    Type: String
    Default: "blog-notifier"
    Description: "The namespace for the blog notifier"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 2048
    Runtime: ruby3.3
    CodeUri: .
    Handler: config/lambda.Lambda.call
    Architectures:
      - x86_64
    LoggingConfig:
      LogFormat: JSON
    Layers:
      - arn:aws:lambda:ap-northeast-1:980059726660:layer:AWS-AppConfig-Extension:125
      - !Ref GemLayer
    Environment:
      Variables:
        NAMESPACE: !Ref Namespace
        APP_ENV: production
        QUEUE_URL: !Ref NotifierQueue
        AWS_LAMBDA_EXEC_WRAPPER: /var/task/bin/bootstrap

Resources:
  GemLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: blog-notifier
      Description: The application core for the blog notifier
      ContentUri: .
      CompatibleRuntimes:
        - ruby3.3
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile
  FetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Namespace}_fetcher"
      Description: "The fetcher function to get the latest blog posts"
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt NotifierQueue.QueueName
    Metadata:
      BuildMethod: makefile
  NotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Namespace}_notifier"
      Description: "The notifier function to send the notification"
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt NotifierQueue.QueueName
      Events:
        NotifierEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt NotifierQueue.Arn
    Metadata:
      BuildMethod: makefile
  NotifierQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Namespace}_queue"
      VisibilityTimeout: 300
      MessageRetentionPeriod: 86400
  # AppConfig
  Config:
    Type: AWS::AppConfig::Application
    Properties:
      Name: !Ref Namespace
      Description: "The application configuration for the blog notifier"
  ConfigEnvironment:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId: !Ref Config
      Name: production
      Description: "The production environment for the blog notifier"
  ConfigChannels:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId: !Ref Config
      Name: channels
      Description: "The configuration profile for the notify channels"
      LocationUri: hosted
      Type: AWS.Freeform
      Validators:
        - Type: JSON_SCHEMA
          Content: |
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["discord"]
                  },
                  "channel": {
                    "type": "string"
                  }
                },
                "required": ["type", "channel"]
              }
            }
